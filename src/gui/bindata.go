// Code generated by go-bindata.
// sources:
// data/index.html
// DO NOT EDIT!

package gui

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dataIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x7c\x7d\x8f\xdb\x36\xf2\xf0\xff\x07\xdc\x77\x60\x14\x14\xf6\x36\x12\x2d\xea\x5d\xee\x3a\xc0\x5d\x9a\xa2\x8b\x27\xbd\x2e\x90\xe0\x80\x43\x51\x2c\xb4\x12\x6d\x0b\x91\x45\x9d\x24\x7b\xed\x06\xfd\xee\x0f\x48\x4a\xb6\x64\x93\x94\xec\x36\xbf\xbb\xf3\x62\xad\x17\x0e\x67\x86\xf3\x4e\x52\xf2\xfd\xab\x84\xc4\xf5\xa1\xc0\x60\x5d\x6f\xb2\xb7\x7f\xfd\xcb\x7d\x73\x04\x00\x80\xfb\x35\x8e\x92\xe6\xbc\xfd\xdc\x57\xf5\x21\xc3\x67\x37\xe9\x07\xbe\x94\x51\x51\xe0\x12\x7c\xb9\x6c\xa3\x9f\x97\x34\xa9\xd7\x73\x80\x7c\xb3\xd8\x7f\x07\x66\xdf\x82\x8f\xb8\x06\xf5\x1a\x83\x2a\xfd\x0d\x03\xb2\x64\xe7\x45\x49\x56\x25\xae\x2a\xf0\x1c\x95\xe0\xdb\x99\x18\xd3\x1a\xa7\xab\x75\xdd\xa2\x12\xc3\xfc\x66\xa4\x79\x82\xf7\x73\x80\x2c\x53\x0e\x55\x90\x2a\xad\x53\x92\xcf\x41\xf4\x5c\x91\x6c\x5b\x63\xc6\xd9\xfb\x3c\x7a\xce\x30\x88\xb3\xb4\x28\xd2\x7c\x25\x65\x84\x02\xcc\x41\x89\xe3\x7a\x6a\x16\x7b\x1d\x20\xb7\x7b\xf0\xdd\x62\x7f\xc7\xf0\xfd\x98\x26\x18\xac\xa3\x6c\x79\xd5\x30\x7f\x17\xdf\x3e\x93\x5c\xd5\xe2\xc4\x19\xde\xe0\xbc\xae\x40\xbd\x8e\x6a\xb0\x89\x3e\x63\xb0\x2d\xc6\x51\x83\x71\x5a\xc6\x19\x96\x69\x6e\x9c\x2c\x5b\xfd\xda\x72\x90\xa3\xe2\x14\x30\xcf\xa4\x4c\x70\x39\x07\xc8\x2c\xf6\xa0\x22\x59\x9a\x80\xd7\x41\xf0\xce\x74\x7d\x65\x07\xa3\x8c\x92\x74\x5b\xcd\x41\x68\x5f\xa3\xed\x71\x7a\xa5\x9a\x3c\xaa\xd5\xa4\x5a\x95\xaa\xa6\x2e\xa3\xbc\xa5\xc2\xce\x97\xa4\xdc\x00\x60\x42\xbb\xfa\x4e\xaa\xe9\xb6\x1f\x85\x9d\x83\x92\xd4\x51\x8d\xa7\x66\x82\x57\x77\xf2\x3e\x67\xd6\x71\x3f\x13\xf9\xa5\xd4\x59\x9f\x49\x72\x90\x68\xfb\x39\x8a\x3f\xaf\x4a\xb2\xcd\x93\x39\x78\x6d\xfd\x60\xfb\xce\xdf\xd4\x1a\xb7\x15\x46\xb1\x24\x79\x6d\x2c\xa3\x4d\x9a\x1d\xe6\xe0\x6f\x65\x1a\x65\x3a\xf8\x11\x67\x3b\x5c\xa7\x71\xa4\x83\x2a\xca\x2b\xa3\xc2\x65\xba\x54\xf5\xa7\x66\x4e\x8d\x4f\x4a\xa5\xc6\xfb\xda\x88\xb2\x74\x95\xcf\x41\x8c\xf3\x1a\x97\x32\x0b\x88\x92\x24\xcd\x57\x46\x4d\x0a\x6e\x61\x32\x03\x20\x19\x29\xe7\xaf\xb1\x49\xff\x64\x30\xdb\xb2\x22\xe5\x3c\xc1\xcb\x68\x9b\xd5\x12\x20\xb2\xc3\xe5\x32\x23\x2f\x73\xb0\x4e\x93\x04\xe7\x12\x30\xe3\x05\x3f\x7f\x4e\x6b\xa3\x26\xdb\x78\x6d\xc4\x51\x96\x91\x6d\x3d\x07\x39\xc9\x79\x40\x4a\x7f\xfe\x08\x3e\x46\xcb\xa8\x4c\xa5\xf6\xd0\xa2\xd8\x56\xb8\x34\x2a\x9c\xe1\xb8\x8b\x60\xa8\xf3\x67\x1a\xf5\x25\x7d\xff\x1f\xc9\xff\xbd\xc5\x25\x29\xc1\x8f\x9f\x7e\xfa\x20\xc7\xb1\x21\xbf\x49\x30\xfc\x90\x96\x78\x49\xf6\xd2\xae\xbc\x7b\x25\xe9\xfd\x40\x15\x9a\xe3\x1a\xbc\xdf\x17\x19\x29\x71\x39\x7b\x9f\xac\xb0\x12\x19\xfd\x88\x91\xfd\x83\xe4\x46\x51\xe2\x65\xba\xc7\x09\xd8\xe1\xb2\x4a\x49\xae\x53\x5d\x96\x38\xaf\xb3\x83\x1a\xa5\xe8\x53\x6d\x8b\x82\x94\x35\x4e\xc0\xf3\x01\xbc\x5b\x97\x64\x83\x41\x94\x27\xe0\xe7\x02\x97\x91\x90\x49\x41\x5c\x9f\x7d\x0b\x3e\x91\x42\x08\xfd\x7a\x73\x78\x78\x94\xb8\x6a\x6b\xce\xcf\xa4\xae\xc9\x66\x0e\x2c\xa9\x45\x8f\xe2\x02\x2a\x48\x91\x22\x8a\xd3\xfa\x30\x07\x26\x74\x05\x24\x2e\xb1\x09\x07\xf9\xd8\x66\x22\x71\x1a\x6a\x13\xd5\x53\x4c\xf2\x3a\x4a\x73\x5c\x0e\xd4\x12\xae\xdc\x85\x37\x51\xb9\x4a\x69\xa8\xdf\xd6\x64\x28\x1d\x29\xd0\xd0\xd0\x4c\x8a\xb9\xc1\x53\x96\x2a\x82\x9f\xb2\x4b\x89\xb3\xa8\x4e\x77\x58\x09\xde\x4b\xaa\x72\x48\x3e\x8c\x26\x60\x05\x2a\x36\xbb\x71\xbb\xc4\x89\x18\xe5\xef\x7f\xfd\xcb\xe5\x4d\x81\xd1\x1d\x35\x51\x90\x94\xba\x9f\x44\x0f\xcb\x8c\x44\xf5\x1c\x94\x54\x8e\xc3\x11\xdc\x72\x87\x02\xee\x92\x7d\x54\x98\x5e\x1a\x9d\xf9\xa6\x2c\x2e\x0b\xf4\x20\xc9\x1a\xa4\x98\x7b\x43\xf5\x0c\x92\xfb\xd4\xf8\xb4\xc3\xe4\x33\x47\xe2\xe1\x8f\x54\x12\xcc\x48\x94\xe0\xf2\xa9\x5a\x47\x09\x79\x19\xf0\x0b\x45\x7d\x35\xc2\x2f\x46\xd7\x49\x63\xea\xb9\x8e\x9d\x4b\x20\x32\xbc\xac\xe7\x81\xbc\x6c\xa3\x7a\x52\x7b\x68\xd7\xf4\x9f\xb3\xad\xc2\xf1\xce\x8a\x45\xd7\xfc\x66\x7c\x19\x5a\xae\x9e\xa3\xa9\xa9\xb3\x3f\x88\x68\x0d\x38\x52\x75\x02\x15\x83\xd7\xf1\x9a\x90\x0a\x2b\xfd\x8a\x99\xcd\xa8\xc8\x2d\x30\x17\x5a\x4b\x0e\xa4\x0d\x55\x15\x34\x8e\x48\x4e\x5e\x9e\x96\x69\x26\x1e\x46\xe3\xd3\xb1\x43\xff\x84\x62\x6e\xc2\x07\x35\x80\xef\xc6\xa5\x28\x61\x56\xf9\x3e\x2d\x71\x4c\xca\x83\x24\xab\x24\xb4\xb9\x26\xe5\xe1\x69\xac\x4c\x14\xe6\x7c\xb3\x53\x35\xae\xd9\xce\xa0\xc6\x25\x64\x6e\x24\xf9\xd3\x71\x08\xea\x38\xcc\x04\x79\xab\x2e\xa3\x3c\xdd\x44\x35\xbe\x6c\x91\xd0\xec\xce\x74\xa2\x2c\x03\x26\x44\xd5\x50\x79\x3b\xae\x8b\x48\x12\x51\x4c\xbb\x3d\x3d\x6f\xeb\x9a\xe4\x12\x8e\x9a\x8a\x1c\x34\x39\x4b\xa9\x88\x4d\xb4\x37\x68\x95\x81\x73\x59\xe2\x4a\xd2\xaa\xc8\xa2\xc3\x1c\xa4\x79\x96\xe6\xb2\x10\x78\x59\x65\x2a\x72\x45\x42\xcd\x34\xe2\xe3\x97\xc0\x0e\x8e\x7d\xbe\xa6\x73\x0a\x99\x04\x98\xcb\xb1\xf4\x3f\x0e\x35\xf5\x88\x27\xce\xbe\x12\x65\x93\x99\x43\x11\x5e\x70\x56\xa6\x28\x32\x66\x03\xc6\x22\x3e\x30\xc4\xf9\x50\xc0\xe6\x6b\xce\xe1\x53\x5a\x0c\xe4\x3d\x45\x85\x71\x16\xf9\x2d\xa8\x00\xed\xce\x80\x15\xe1\xeb\x6c\x3c\x7f\x24\x92\xbe\x7e\xc6\xab\x54\x66\xd7\xb3\x6f\xbb\xe5\xb7\x3d\xae\x58\x54\x68\x61\x9c\xcc\x19\x47\x4f\xd5\x6e\xa5\x8b\x14\x52\x93\x42\xd6\xf6\x5c\xe2\xe8\x33\x6d\x94\x0c\xe7\xcc\xb1\x8c\xe7\x8c\xc4\x9f\xd5\x51\x53\x91\xfe\xdb\x1a\x64\x78\x2a\x20\x09\xce\x22\xb7\x48\x37\xd1\x0a\xab\x83\xcd\xd5\x9c\x8d\xb4\xf4\x3f\x43\xb0\x57\xc6\x96\xdd\xc0\x50\x45\x61\x1b\xe0\xa8\xc2\x46\x9a\x1b\x64\x2b\x0b\xa0\xe3\xc2\x71\xc7\xb2\xc3\x01\x41\x2a\xd2\xf2\x71\x29\x6a\xac\x0b\xf6\x07\xae\x0c\xaa\x47\x0e\xd1\x2d\x98\xf9\x95\x6c\xad\x8d\xec\x0d\x5e\xd0\x2b\x93\x47\x47\x46\xfe\x38\x33\x8a\x32\x5c\xaa\x23\xba\x38\x47\x80\x6b\xa6\x35\xa7\xf9\xf3\x50\xc0\xbf\xb2\xd2\x84\x19\x91\xd9\x38\xcd\xdb\x2d\x5d\x67\xdc\xd4\x4c\x52\x15\x81\xa3\xd9\xa8\x56\xb5\xd5\xb1\x03\xf4\x95\x63\xdf\xbe\x0a\x28\x52\x62\x89\xe9\x9c\xef\x29\x2d\x2a\x65\x0c\x52\x44\xfa\x56\x52\x0a\x90\x71\x65\xce\x55\x93\x6a\x47\x4a\x8c\x25\x4a\xc5\x2a\xc0\xb5\x11\xc3\xbb\x5a\x92\xe3\x3c\xdd\x84\xc1\xf5\x98\x95\x9e\x7e\x0a\x22\x23\x5d\x80\x87\x8f\xa7\x34\x1e\xc8\x40\xb7\x6b\x5f\x38\x57\x7d\x4d\x96\xcb\xa1\x65\x37\x5b\xe1\xf0\x23\xd2\x71\x6f\xa1\xaa\x3b\xa7\xb6\x65\xfb\x2a\x23\xbd\xb9\x9d\xc3\xf1\x72\x4c\xce\xe3\x68\x63\x6e\xea\x54\xc5\x46\xc1\xc0\xda\x44\x6f\x37\x88\x14\x63\x32\xa7\xc8\xc8\x98\x4e\x9e\x14\x7b\x36\x37\x94\x54\xbe\x74\xe9\x63\x44\x78\xed\x85\xf5\xd1\x65\x3c\x6c\xc6\xa1\xaa\x35\xae\x19\xc9\x68\x3d\xb6\x76\x3b\x98\xa7\xca\xc6\x78\x87\x77\x27\xfb\xab\x42\x96\xeb\xea\xed\xbf\x09\x5d\x99\x1d\x9f\xcd\x41\x14\x4b\x5e\x63\x53\xb0\x32\xac\x5c\x25\xa3\x6b\xe7\x64\x3d\x65\x2a\xa3\x6a\xb7\xc8\x31\x8b\x3d\xfb\xa7\x46\xc3\x4e\x7a\x01\xc0\x17\x4a\x4e\xee\x11\x07\x2c\xc9\x8c\x17\x21\xc6\x72\x02\x1d\x20\xdf\xd2\x81\x8d\x28\xa1\xbb\x6b\xc8\xe4\x44\x4c\x65\x64\x48\xed\x49\x4a\x96\xca\xaf\xb1\xfb\x11\x0e\x3a\x62\x61\xfe\x36\x1f\xbe\xbc\xd3\xdf\x79\xbe\x9f\x75\x9e\x19\xb9\xa7\x21\xab\xbf\xfb\xdc\xef\x7f\x9f\xa4\x3b\x10\x67\x51\x55\x2d\xb4\xcd\xe1\xe1\x51\x7b\xfb\x2f\xb2\x2d\xc1\xc3\xe3\x1c\xdc\x57\x45\x94\x83\x34\x69\x1b\x90\xe5\x43\x13\x9a\x10\xdd\xcf\x68\xcb\xdb\xfb\x59\x92\xee\xce\xb7\xbb\x3b\xe8\x7a\xcb\xe5\xda\x20\xf8\xe5\xd6\x93\x26\xd8\x36\xef\xf6\x68\x1e\x77\xd1\x40\x12\xd5\x91\x11\xe5\xe9\x66\xa1\x3d\x47\x15\x06\xc7\x06\xca\x7c\x7b\x21\x40\x76\x8e\x90\x3f\x84\x71\x89\x8f\x7a\x26\x47\xc6\x21\x9e\xd8\x0d\xe1\x88\xae\x41\xcb\x6c\xa3\x87\x97\xdf\x91\x22\x96\xde\xa7\xc4\x28\x9a\xf3\x4d\x23\xd9\xa0\xcd\x6f\xc6\x21\x17\xdc\x93\x2b\xb0\xbf\xca\x3b\xa4\xbc\x8b\x85\x55\x19\xaf\xdf\xb7\x00\x1d\x8b\x9c\x5c\xf4\x9e\xbc\xa5\xb3\xb7\xc6\x32\xaf\x94\x5c\x7d\x28\xf0\x42\xe3\xd1\xa1\x51\x07\x43\xaf\xb5\xbc\xf6\x96\xff\x64\x7c\xbe\x63\x7d\x5e\x5d\x2f\x58\xa9\x44\x27\x54\x8e\x93\x01\x39\x76\xd6\x0f\xa5\x26\xce\x84\xf2\x11\xe7\x09\xa8\xc9\x1c\x34\x42\x6a\x1a\x65\x5d\x18\x46\x26\x8c\xe3\xd2\x9f\x0c\x3f\xef\x41\x0a\x2a\x24\xb0\x8b\xb2\x2d\x5e\x68\x28\xb4\x20\xf2\x02\x68\x42\x4b\x7b\x7b\xba\x40\xf7\x33\x0e\x27\x63\x75\xc6\xa9\xa9\xbc\x8a\xf2\x74\x2a\xfa\x55\x4c\xdd\x57\xbb\x55\x2b\xa7\x4e\x35\xaf\x81\xfd\x26\xcb\xab\x85\xb6\xae\xeb\x62\x3e\x9b\xbd\xbc\xbc\xc0\x17\x1b\x92\x72\x35\xb3\x4c\xd3\x9c\x55\xbb\x55\x03\x32\xdf\x67\x69\xfe\x59\x04\x88\xc2\x30\x9c\xb1\x56\xad\x7d\x88\x61\xa1\x21\x88\xb8\xfd\xbc\x8b\x8a\xe8\x09\x69\x60\xbf\xd0\xcc\x62\xaf\x81\x43\x73\xdc\xa5\xf8\xe5\xef\x84\xde\x05\x26\xb0\x02\x68\x79\x6e\x73\xd0\x00\x8b\xe1\x0b\x0d\xb3\x27\xdf\x8c\x4e\xfe\xcc\xf1\x0b\xb8\x80\xff\x8e\x71\x38\xaf\x8a\x28\xc6\xd4\xef\x71\x85\xcb\x1d\xd6\x78\xa1\xb5\xd0\x5c\x64\x51\x7a\x3c\x4f\xb5\x97\x2a\xf5\x51\x69\xad\x06\x00\x8e\x80\x45\x54\xaf\x41\xb2\xd0\x7e\x42\x0e\x44\xb6\xad\x73\x96\x62\xc3\x87\xa6\x87\x74\xd3\x40\x16\x0c\x4c\xd7\x70\xa1\xef\xb6\xe7\xec\x10\xc6\x26\x83\xd1\x5d\xe8\x3b\x0e\xbf\xe7\xeb\x5d\x08\x3f\x36\xa1\xe3\x85\xac\x16\x09\x1d\x5b\x37\xa1\x69\xf9\x3a\x82\x0e\x72\xe8\x79\x00\x00\xd8\x19\x16\xa4\x70\x86\x09\x2d\xcf\xd3\x4d\x88\x3c\xc7\x30\xa1\x6b\x06\xba\x09\x1d\xd3\x33\x4c\xe8\x21\x14\x9b\xd0\x72\x2d\xc3\x84\x66\x48\xef\xbb\x36\xa2\xe7\x0c\xa3\x6f\xd1\x6f\xe4\x04\x99\x03\x5d\xdb\xd7\x1d\xe8\x3a\x3e\x83\xa7\x90\xdd\x6f\xcf\xe7\x8c\xd8\x16\x2d\xcf\x0c\x0a\xee\x52\x70\xd7\x8f\x0d\x13\xa2\x90\xe1\x09\x02\xc3\x84\x8e\x4f\xcf\x2d\x87\x52\xf7\x2d\x97\xe1\xb7\x29\x90\xe5\x50\x26\x90\x49\x59\xe4\xcc\xd9\xce\xe9\xdc\x33\xc3\x7f\xfa\xd0\xf1\xe9\xcc\xdb\x60\x23\xa7\x5c\x06\xb4\x29\x74\x28\xc7\xc8\x72\x0d\x36\x7a\x7e\x1e\x1b\x0e\x27\x65\x04\x10\x21\x5b\xb7\xa1\x67\x87\xcd\x39\xfd\x46\xb1\xa9\x53\x08\x44\x5b\x1c\xa4\x9f\x5a\x9a\xef\x8a\x41\x19\xb4\xb5\xe9\xc1\x7b\x53\x06\xa8\x44\x6d\x8f\x8d\x23\x74\x29\x73\x54\xb8\x9e\x67\xb1\xd3\xb5\x0d\x6d\x2f\x8c\x29\x84\xcb\x84\xe2\x79\x16\x83\xf4\x8f\xe7\x9e\xf7\xce\xf2\x60\x68\xfb\xba\x65\x41\x17\xb9\xba\x85\x20\x0a\xc2\xc6\x3a\xf4\x9e\xad\xfc\xa6\x81\x65\x9a\x65\x0b\xed\xf5\x0f\xec\xa3\xcd\xc6\xda\xde\x68\x23\x9d\x0d\x41\xaa\x21\xee\x69\x18\x90\xb5\x5f\x93\xa0\x15\xe9\x9a\xad\x11\xde\x98\xee\x19\x02\xb6\x43\xa0\xac\x6c\x8e\x50\x4f\x2c\xaa\x91\x3c\xce\xd2\xf8\xf3\x42\xab\xea\xa8\xac\x3f\x90\x28\x99\xde\x69\xa0\x4e\x6b\x1a\x7a\x3e\xd2\x7b\x80\x94\x80\x56\x60\x69\xbe\xc5\x63\x63\x6b\x6f\xbd\xf5\xbf\x25\xba\xda\x16\x44\xae\xdd\x1e\xc7\xc4\xd7\x7e\x8f\xaf\x12\x61\x19\xff\x8f\x59\x24\xad\x76\x7a\xe0\x2c\xce\x36\x7c\x53\x77\x31\xca\x6d\x86\xe7\x78\x87\x73\x92\x24\xdf\xc5\x59\x5a\xf4\xef\x68\x2c\x28\x5b\xa6\x0d\xfd\x10\xe9\x61\x08\x3d\x2b\xf8\xe0\x84\xd0\x36\x7d\xdd\x82\x56\xe8\xd0\xf8\xe1\x7a\xbe\x61\x41\x1f\x85\x06\x32\xa1\x65\x07\x86\x45\xe3\xa8\x81\x1c\xe8\x5a\x88\x5f\xb0\x70\x84\x7c\x88\x6c\x8b\x46\x73\x1f\x9a\xae\xa7\x23\x1b\x5a\x96\x7f\xbc\xf2\xa0\xeb\x07\x3b\x14\x06\x30\x74\x62\x53\xb7\x60\x60\xdb\x34\x78\xf9\x2e\x6f\x0b\xf5\x2e\x64\x18\x3b\xd0\x0a\x6c\xdd\xd4\x43\x18\xb2\x29\xba\xe3\x22\xbd\x43\x93\x86\xc0\x0c\xb9\x0e\x74\x02\xdb\x08\x7d\x68\xdb\x76\x8c\x2c\xe8\x05\x86\x0f\x5d\xc7\xd5\x91\x09\x9d\x20\x34\x90\x07\x1d\x27\xec\x5f\x7d\xb4\xe8\xd1\x47\x3a\x32\x7d\x48\x67\x98\x7d\x01\x5c\x1d\x6a\xc6\xc4\x05\x59\xd9\x34\x34\x23\x60\xf5\x54\xb3\xc1\xd4\xf3\x46\x52\x9c\x39\xe3\x63\xb4\xad\x86\x1d\xf0\xbf\xdd\x03\x3d\x3f\x6c\x8f\x23\x3d\xb0\xd3\xe3\x2b\x7a\xe0\x90\x70\x8f\xf0\xb7\xb9\x60\x60\x42\x97\xd6\x1a\x3f\xda\x2e\xf4\x43\x3f\x36\x42\x18\x04\x2e\xf7\xa5\x20\x0c\xf4\x00\x9a\xc8\x69\x2f\xf8\x61\x87\x42\x0f\x06\x01\xcf\xc4\x3a\x87\xa7\x60\xb6\xde\x03\x6b\x0e\x6b\xc7\x81\xbe\xe3\xc5\x0d\xde\xe6\xae\xd1\xed\xd0\xa0\xff\x27\x3f\xbc\x0b\x03\xe8\x38\x9c\xb0\x1e\x9a\xd0\xb1\x68\x6d\xd3\xf2\xf9\x1b\xf8\x89\x93\xb7\x74\x13\x00\xb0\x36\x1a\xf4\x8c\x6f\xaf\xe5\x3b\xec\xf2\x1d\x9e\xf1\xad\x60\x3a\xec\x33\x4d\x47\x38\x9e\x6f\x0b\x39\xd0\x0f\x50\xc3\xb9\x65\x7a\xd0\x67\x65\xd9\x91\xdf\xaf\xe2\xdf\x6a\xf7\x56\x38\x38\x4f\xb8\xed\x36\x71\xc7\xc5\xd9\xbd\x33\x1f\x7f\x17\xe5\x31\xce\xc0\xb6\xa0\x93\x99\xff\xe9\x64\x8b\x2c\x18\x06\x56\x7b\x1c\xe3\xea\xfd\x1e\x5f\xcf\xd5\xdf\x65\xe4\xab\xba\x3a\xb2\x11\x0c\x4c\x47\x47\xa6\x07\x9d\x10\x65\xbe\x0b\x43\xdb\x33\xf8\x21\xf6\x60\x18\x1a\xf4\x4b\x67\x67\x28\x80\x36\x9d\x7d\x18\x96\x0b\x6d\x64\xb1\x3c\x7b\x04\xe1\xad\x16\x3f\xe7\x00\xba\x99\x71\x4c\xbe\xce\x0f\x1f\x6c\x13\xba\xae\xa3\xbb\x74\x62\x31\xd4\x97\xb5\x07\x0d\x69\x7e\xda\x32\xa0\x1f\x19\xc8\xba\xf8\xbd\x0f\x0c\xb1\x8e\x02\x8b\x46\x88\x61\x04\xf1\x71\x6c\xbc\xc5\xe2\xe7\x47\xee\x39\xf2\x66\x0c\x3d\x52\x6c\xce\x73\x42\x2f\xec\x2e\x14\x9f\x75\x14\xdf\x87\x33\xd9\xff\x07\x22\x41\xef\x5e\x6f\xed\x73\xc5\xdd\x87\x9e\x34\x05\x3e\x87\xba\x61\x55\x8f\xad\x5e\x0f\x56\xf9\xa7\x2d\x2a\x95\xb5\xb7\x4b\x31\x96\xeb\xd2\xff\x39\xb2\x6c\xc7\xf5\x80\x01\x58\xf7\x76\xbb\x0c\x1c\xd7\xd5\x80\x16\x55\x95\x76\x63\xb5\xd3\x08\xa3\xb7\xfa\xae\x0c\x73\xfd\xb1\x1c\x70\xa5\x89\x70\x0c\x79\xf3\xbf\x70\xa5\xd2\xaa\x9c\x69\x01\x0f\x39\xb9\x89\x85\x7f\x90\xdb\x38\xb8\xb5\x6d\xe4\xaa\xe3\x2b\xc3\x00\xf7\x69\x5e\x6c\xf9\xca\xde\x32\xcd\xa8\x88\xf9\xfa\x27\xbd\xd0\x00\x7f\x4e\xf4\xa4\xfe\xd3\xd9\x66\x9b\xd5\x69\x91\xe1\xd9\x5b\x60\x18\x17\x6f\xb9\xc5\x65\x5a\xd4\x6f\x39\x2b\x97\xcc\xec\xa2\xb2\x31\xb0\x05\x48\x48\xbc\xdd\xe0\xbc\x86\x2b\x5c\xbf\xe7\x6f\x4c\xfe\xfd\xf0\x90\x4c\x1b\x33\x17\xec\x0b\x1d\x7b\x33\xeb\x1e\x44\xc1\x7d\x40\x89\xe7\x80\xab\x61\x34\xd4\xfc\x94\x58\x72\x32\x8c\x24\x27\x22\x1c\x22\x19\x1d\x89\xc2\x28\x49\xde\xef\x70\x5e\x7f\x48\xab\x1a\xe7\xb8\x9c\x4e\x58\x0d\x31\xd1\xc1\x72\x9b\xb3\xa5\xe8\xe9\x9d\xf4\xf9\x80\x3c\x21\x2f\x10\xef\x6b\x5c\xe6\x51\x06\xd3\x7c\x47\x3e\xe3\xe9\x24\x8a\x63\x5c\xd4\x9f\xb8\x77\xff\x4c\x29\xcd\x27\x6f\x18\xc5\xea\x23\xfe\xf7\x16\xe7\x31\xfe\xa5\x7f\x09\x33\x9c\xaf\xea\x35\x30\x00\xfa\x15\x3e\x3c\xca\x36\x54\x73\xbc\xaf\xa7\xc2\x3d\x43\xe1\xb0\xc5\x83\xce\xc9\xd7\x18\x73\xcc\xaa\xab\xff\xeb\x31\x2b\x0c\xe6\x48\x07\x2c\xc0\x2f\xbf\x8a\x01\xab\xed\x33\xf5\xa5\x67\x5c\x56\x0d\xd4\x25\x5c\x2b\x91\x13\xf0\x27\xc2\xc6\x57\x4d\x69\x93\x4c\x4e\x1d\xd4\xb0\xd8\x56\x6b\x0e\x3c\x72\x0b\xf5\x48\x73\x9b\x1f\xf1\x28\xa9\xcd\x66\x7d\x82\xa4\x98\x76\xaf\xd9\x2b\x29\x3f\x2f\x39\x0a\x01\x13\xe7\x0c\x57\x45\x96\xc6\x58\x8e\x42\x07\x48\xb2\x73\xad\x18\x0b\xd7\xca\x23\x95\x05\x3b\xa5\x63\x11\xb3\x72\x66\x27\xc5\xa9\x8b\x18\x3e\x5d\x4e\xc5\xa6\xb5\x58\x00\x24\x13\xd9\xf9\x98\x97\xa4\x7c\x1f\xc5\x5c\x4f\xcc\x03\x54\xf2\xee\x0e\xee\x8c\xf6\x2f\xe6\xaf\x12\x36\x81\xc4\x51\x81\xf4\xe5\xf7\x6b\x45\xcc\x7d\x45\xf6\x48\x16\x65\x13\xb2\x92\x1b\xd6\xa4\x00\x0b\x30\x71\xcd\x62\x3f\x91\x69\x41\x26\xd5\xc5\xc2\xbc\xfb\x52\xe2\x7a\x5b\xe6\x92\x57\xf6\xcf\xba\x35\xd6\x64\x4a\xac\x46\x45\x0b\xbc\x05\xe6\xff\xac\x02\x85\xba\x12\x47\x11\xc6\x6f\x16\x55\x3c\x72\x2a\x35\xc8\x12\x2e\x4c\xf3\x1c\x97\xec\xfd\xe4\x05\x38\xf6\x83\x35\xde\x0b\x5e\xa0\x02\x62\xe5\x73\xdd\x8b\x80\xc7\xc4\xda\xfb\x59\x53\x85\x88\x6b\x93\x0b\x14\xb4\x3f\xff\x3b\xc7\x2d\xcb\xe9\xcd\xb6\xf3\xe4\xee\x32\x5d\x69\x2c\x5d\x69\x3a\xe0\x20\x3f\x50\x45\x0b\x2c\x4b\x5a\x2d\x74\x36\x34\x55\xd8\x39\xd8\x3b\x92\xe7\x38\xae\x71\xf2\xf0\x58\x09\x94\x3f\x9b\xc9\x47\x70\xdc\x0b\x10\x0d\xe2\x98\x73\xd9\xee\xc0\xa8\x04\xde\x3e\x71\x30\x0d\xcc\x0b\xf8\x4b\x68\x59\xaa\xde\x1c\x1e\x1e\x27\xc2\xe4\xd9\xf4\x60\xf3\x92\xef\xa3\x3a\x02\x0b\xf0\x85\x4e\xd4\xe7\x40\x4b\xe6\x33\x64\x85\x33\x3f\x08\xb4\xdf\x05\xa2\xa6\xd9\x94\xda\xe1\xd3\x32\xcd\xc1\x02\x88\x5e\x56\x55\xc4\xad\x4b\x41\x5f\x5d\x7f\xac\x70\xdd\xed\x3f\xb9\x13\x93\x54\xc7\xcf\x12\x27\x65\xf4\x42\xc9\xa7\x45\x25\xe3\x20\xc3\x35\xe0\xfb\xe6\x44\x55\x61\x4f\x8e\x3b\xf9\x13\x59\xc6\x6d\x90\xf4\x9c\x59\x93\x4c\xff\x28\xd5\x1c\xbf\xbc\xcf\x64\x11\xb4\x10\x44\xc0\xe6\x37\x52\x54\x41\x90\xe1\xec\x0e\x23\x2e\x71\x54\xe3\x66\x24\xd3\x09\x7f\x80\x40\x36\x84\x23\x06\xc8\x9e\x44\x00\x8b\xf6\x67\x59\x86\xc0\xd9\x90\x3f\xe1\x7d\x7d\xea\xc2\xf2\x44\x3d\x9d\xcc\x27\x77\xbf\x98\x82\x82\xed\x42\x6c\x51\x51\xe0\x3c\x79\xb7\x4e\xb3\x64\xca\xb0\xca\x42\xf3\xf5\xb5\x4a\x67\xc3\x4e\x22\x3b\x6a\xf0\x69\xa1\x9a\x92\x9c\x9e\xe4\xb8\xe3\xd2\x91\xe7\xbe\x73\xbf\x83\xd4\xe9\x16\x0b\x2d\x27\x39\xd6\x54\xda\x93\x12\xe7\x9b\x9d\x77\x27\xd3\x5a\x68\xfc\x91\x99\xd3\x1c\xf3\xd5\xab\x57\x12\x5b\xfb\x1d\x67\x15\xa6\x7c\xbd\x4a\x8b\x3f\x99\xfa\xc3\xe3\x00\xd9\x3f\x89\x9c\x84\x84\x12\xcd\x69\xe7\xf6\xae\xc9\x94\xcd\x53\x8a\x34\x5b\x52\x55\x48\xd2\xa5\x12\xe9\x71\xff\x49\x80\xb3\xfb\xec\xe3\x2d\xb8\x4f\x2b\xdf\xb7\x23\x97\xc5\xd3\xa3\x07\xcc\xbf\x68\xd4\x1a\xb5\x39\xd0\x26\x6f\x84\x86\xfa\x66\xa2\xe9\x40\x4b\x0b\x0e\x92\x16\xe0\xcd\x44\xfb\x5d\x16\x31\xc4\x75\xd2\xf9\x2d\xa5\x6b\xb6\xbb\x77\xb2\x47\x4b\x6f\x51\x85\x42\xbd\xb7\xd9\xcb\x99\xf8\xaf\x0d\x40\x9d\x0d\x8c\xff\xf8\x30\x55\x56\xf6\xb5\xe5\x76\x9d\xd4\xaa\x0c\xe3\x02\x4c\xeb\x74\x83\x69\xf5\x56\x91\x6c\x87\xef\x64\x2f\x74\x1f\xd3\x24\x98\x0e\x81\x02\x96\x76\xea\x4f\xe9\x06\x93\x6d\xdd\xe9\x78\x07\xbe\x48\x36\xa7\xdb\x4f\x83\x5a\xb8\x82\x71\x1c\x94\x4e\x39\x96\x66\xaf\x23\x7b\x02\x71\x88\x57\xb7\x8e\x0c\x1e\x0b\xc6\x5d\x94\xa9\x32\x19\xaf\xda\x6c\xe8\x7d\x0b\x76\x51\x26\xcd\x53\xcb\x34\x7f\x8b\x02\xe5\x8c\x4c\xaa\xf5\xee\xc3\xbc\xad\xde\x4f\xbf\x18\xb6\x00\x5a\xf3\x3b\x60\x28\x60\xbf\x04\x76\x4b\x00\xef\x3d\xd7\xab\xa2\xa1\xbd\x59\xa6\xf9\x1b\xed\x56\x3a\xed\x43\xce\x2d\x89\x38\x4b\x8b\x85\xc6\x7e\x3f\x2d\xda\xd6\x44\xef\x7f\xdd\x69\x0a\x13\xe9\xd4\xcc\xcb\x54\xf6\x73\x59\x40\xfa\xe4\xe8\xcd\x29\x53\x31\x04\xb3\xd8\xeb\xfc\xb7\xdf\xf8\x37\xfb\x5d\xbf\x3f\xa0\x8e\x41\x8d\xff\x41\x6d\x8c\xd6\xfa\x90\x5d\x8d\xd2\x85\x64\xc9\x43\x3a\x0b\x38\x7f\x48\x7c\x72\xd7\x2b\xf7\x77\x51\xf6\x46\xfb\x46\xc0\xd4\x40\xa0\xc3\xf5\x4f\x87\x87\xc7\xa9\xbc\x3e\x93\x8a\x8b\xbd\x5e\xd0\x67\x22\x2d\x6e\xa0\xff\x81\xac\xa6\x19\x59\x5d\x4d\x3f\x23\xab\x33\xf2\x19\x59\xfd\xd1\xa2\xe0\xb4\x0e\x70\xf5\xc4\x91\xd0\x49\x44\x5a\x4e\x14\x4b\x53\xc2\xaa\xa7\xbb\x1a\x36\x58\x5e\xf5\xbb\x52\x9b\x64\xa5\xfd\x55\x26\x46\xe3\x74\xd3\x5b\x8c\xf6\x26\xfe\xdf\x2e\x90\x79\xf7\xa5\xc1\x3b\x81\x10\x4e\xde\xb0\xd6\x6a\xfb\x5c\xd5\xe5\xb4\x03\x09\x0c\xe0\xdf\x5d\x6b\xfe\x97\xaf\x0e\xf4\x75\x4f\xf1\x5f\x3d\x3b\x63\x05\x84\x52\xd9\x12\x8c\xca\x25\xac\xfb\x59\xf3\xfa\xce\xfd\x8c\xfd\x26\xec\xff\x0f\x00\x00\xff\xff\x13\x6e\x75\xa0\x2b\x56\x00\x00")

func dataIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_dataIndexHtml,
		"data/index.html",
	)
}

func dataIndexHtml() (*asset, error) {
	bytes, err := dataIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/index.html", size: 22059, mode: os.FileMode(438), modTime: time.Unix(1527881244, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"data/index.html": dataIndexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"data": &bintree{nil, map[string]*bintree{
		"index.html": &bintree{dataIndexHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

