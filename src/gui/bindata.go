// Code generated by go-bindata.
// sources:
// data/index.html
// DO NOT EDIT!

package gui

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dataIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x3d\x7f\x8f\xdb\xb6\x92\xff\x3f\xe0\x7d\x07\x46\x41\x61\x6f\x23\xd1\xfa\x69\x49\xce\x3a\x40\x5e\x9a\xa2\xc1\xa5\x6d\x80\xe4\x1e\xee\xa1\x28\x16\x5c\x89\xb6\x89\xc8\xa2\x2a\xd1\x5e\xbb\x45\xbf\xfb\x81\xa4\xe4\x95\x6c\x91\x92\x37\xcd\xa1\xe7\x60\x6d\x59\x1a\xce\x0c\xe7\x37\x87\x92\x73\xfb\x2c\xa5\x09\x3b\x16\x18\x6c\xd8\x36\x7b\xf5\xcf\x7f\xdc\xd6\x9f\x00\x00\x70\xbb\xc1\x28\xad\x8f\x9b\xd7\xed\x16\x33\x04\x36\x8c\x15\x16\xfe\x6d\x47\xf6\x4b\xe3\x7f\xac\xff\x7e\x6d\xbd\xa1\xdb\x02\x31\x72\x9f\x61\x03\x24\x34\x67\x38\x67\x4b\xe3\xdd\xdb\x65\xfc\xf2\xdd\xdb\xa5\x63\xf3\xf7\xb7\xe9\x1a\x9b\xc9\xa6\xa4\x5b\xbc\x74\x8c\xd9\x39\xde\x8a\x1d\x33\x7c\x76\x92\xbf\xe0\x43\x89\x8a\x02\x97\xe0\x8f\xcb\x6b\xfc\xf5\x40\x52\xb6\x59\x00\x27\xb4\x8b\xc3\x4b\x30\xfb\x16\x7c\xc4\x0c\xb0\x0d\x06\x15\xf9\x1d\x03\xba\x12\xc7\x45\x49\xd7\x25\xae\x2a\x70\x8f\x4a\xf0\xed\xac\x1f\xd3\x06\x93\xf5\x86\x35\xa8\xfa\x61\x7e\xb7\x48\x9e\xe2\xc3\x02\x38\xae\xad\x86\x2a\x68\x45\x18\xa1\xf9\x02\xa0\xfb\x8a\x66\x3b\x86\x05\x67\x6f\x73\x74\x9f\x61\x90\x64\xa4\x28\x48\xbe\x56\x32\xc2\x01\x16\xa0\xc4\x09\x9b\xda\xc5\xc1\x04\x4e\xd0\xfe\x08\x83\xe2\x70\x23\xf0\xfd\x40\x52\x0c\x36\x28\x5b\x5d\x35\xcd\x3f\xfb\x4f\x9f\x49\xae\x6a\x70\xe2\x0c\x6f\x71\xce\x2a\xc0\x36\x88\x81\x2d\xfa\x8c\xc1\xae\x18\x47\x0d\x26\xa4\x4c\x32\xac\xd2\xdc\x38\x59\x36\xfa\xf5\xd4\x20\x27\xc5\x69\x60\xee\x69\x99\xe2\x72\x01\x1c\xbb\x38\x80\x8a\x66\x24\x05\xcf\xa3\xe8\x8d\x1d\x84\xda\x01\x56\x89\x52\xb2\xab\x16\x20\xf6\xae\xd1\xf6\x38\xbd\x72\x4d\x9e\xd4\x6a\x73\xad\x2a\x55\xc3\x4a\x94\x37\x54\xc4\xf1\x8a\x96\x5b\x00\x6c\xe8\x55\x2f\x95\x9a\x6e\xc6\x71\xd8\x05\x28\x29\x43\x0c\x4f\xed\x14\xaf\x6f\xd4\x63\xce\xac\xe3\x76\xd6\xe7\x97\x4a\x67\xbd\xa7\xe9\x51\xa1\xed\x7b\x94\x7c\x5e\x97\x74\x97\xa7\x0b\xf0\xdc\xfd\xde\x0b\xfd\xd7\x7a\x8d\x7b\x1a\xa3\x58\xd1\x9c\x59\x2b\xb4\x25\xd9\x71\x01\x5e\x97\x04\x65\x26\xf8\x01\x67\x7b\xcc\x48\x82\x4c\x50\xa1\xbc\xb2\x2a\x5c\x92\x95\x6e\x3c\x37\x73\x6e\x7c\x4a\x2a\x0c\x1f\x98\x85\x32\xb2\xce\x17\x20\xc1\x39\xc3\xa5\xca\x02\x50\x9a\x92\x7c\x6d\x31\x5a\x48\x0b\x53\x19\x00\xcd\x68\xb9\x78\x8e\x6d\xfe\x4f\x05\xb3\x2b\x2b\x5a\x2e\x52\xbc\x42\xbb\x8c\x29\x80\xe8\x1e\x97\xab\x8c\x3e\x2c\xc0\x86\xa4\x29\xce\x15\x60\xd6\x03\xbe\xff\x4c\x98\xc5\xe8\x2e\xd9\x58\x09\xca\x32\xba\x63\x0b\x90\xd3\x5c\x06\x24\xf2\xf3\x47\xf0\x11\xad\x50\x49\x94\xf6\xd0\xa0\xd8\x55\xb8\xb4\x2a\x9c\xe1\xa4\x8d\x60\x68\xf0\x67\x9e\x4d\x14\x63\xff\x8b\xe6\xbf\xed\x70\x49\x4b\xf0\xc3\xa7\x1f\xdf\xab\x71\x6c\xe9\xef\x0a\x0c\xdf\x93\x12\xaf\xe8\x41\x39\x54\x0e\xaf\x14\xa3\xdf\x71\x85\xe6\x98\x81\xb7\x87\x22\xa3\x25\x2e\x67\x3c\x43\x69\x91\xf1\x57\x3f\xb2\x9f\x68\x6e\x15\x25\x5e\x91\x03\x4e\xc1\x1e\x97\x15\xa1\xb9\xc9\x75\x59\xe2\x9c\x65\x47\x3d\xca\xbe\x57\xb5\x2b\x0a\x5a\x32\x9c\x82\xfb\x23\x78\x23\xb2\x26\x40\x79\x0a\x7e\x2e\x70\x89\x7a\x99\xec\x89\xeb\xb3\x6f\xc1\x27\x5a\xf4\x42\x3f\xdf\x1e\xdf\x7d\x50\xb8\x6a\x63\xce\xf7\x94\x31\xba\x5d\x00\x57\x69\xd1\xa3\xb8\x80\x1a\x52\xb4\x40\x09\x61\xc7\x05\xb0\x61\xd0\x43\xe2\x12\x5b\xef\x24\x3f\x34\x99\xa8\x3f\x0d\x35\x89\xea\x8e\x57\x26\x88\xe4\xb8\x1c\xa8\x25\x02\xb5\x0b\x6f\x51\xb9\x26\x3c\xd4\xef\x18\x1d\x4a\x47\x1a\x34\x3c\x34\xd3\x62\x61\xc9\x94\xa5\x8b\xe0\x8f\xd9\xa5\xc4\x19\x62\x64\x8f\xb5\xe0\x9d\xa4\xaa\x86\x94\xd3\xa8\x03\x56\xa4\x63\xb3\x1d\xb7\x4b\x9c\xf6\xa3\xfc\xf3\x9f\xff\xb8\x3c\xd9\x63\x74\x27\x4d\x14\x94\x70\xf7\x53\xe8\x61\x95\x51\xc4\x16\xa0\xe4\x72\x1c\x8e\xe0\x6e\x30\x14\x70\x57\xe2\xa5\xc3\xf4\x50\xeb\x2c\xb4\x55\x71\xb9\x47\x0f\x8a\xac\x41\x8b\xc5\x7c\xa8\x9e\x71\xd4\x3e\x35\x3e\xed\x08\xf9\x2c\x9c\xfe\xe9\x8f\x54\x12\xcc\x28\x4a\x71\x79\x57\x6d\x50\x4a\x1f\x06\xfc\x42\x53\x5f\x8d\xf0\x8b\xd1\x75\xd2\x98\x7a\xae\x65\xe7\x0a\x88\x0c\xaf\xd8\x22\x52\x97\x6d\x5c\x4f\x7a\x0f\x6d\x9b\xfe\x7d\xb6\xd3\x38\xde\x59\xb1\x18\xd8\xdf\x8c\x2f\x43\xcb\xf5\x3d\x9a\xda\xa6\xf8\x07\x1d\x5e\x03\x8e\x54\x5d\x8f\x8a\xc1\xf3\x64\x43\x69\x85\xb5\x7e\x25\xcc\x66\x54\xe4\xee\x31\x17\x5e\x4b\x0e\xa4\x0d\x5d\x15\x34\x8e\x48\x4e\x1f\xee\x56\x24\xeb\x9f\x46\xed\xd3\x89\xcf\xff\xf5\x8a\xb9\x0e\x1f\xdc\x00\x5e\x8e\x4b\x51\xbd\x59\xe5\x3b\x52\xe2\x84\x96\x47\x45\x56\x49\xf9\x65\x46\xcb\xe3\xdd\x58\x99\x68\xcc\xf9\xc9\x4e\x55\xbb\x66\xb3\x82\x1a\x97\x90\xa5\x91\xe4\x77\xa7\x29\xe8\xe3\xb0\x10\xe4\x53\x75\x89\x72\xb2\x45\x0c\x5f\x5e\x51\xd0\x6c\xaf\x74\x50\x96\x01\x1b\x3a\xd5\x50\x79\x3b\x6e\x48\x9f\x24\x50\xc2\x87\xdd\xdd\xef\x18\xa3\xb9\x82\xa3\xba\x22\x07\x75\xce\xd2\x2a\x62\x8b\x0e\x56\xdd\xff\x50\xc0\xa5\xa4\x2a\x32\x74\x5c\x00\x92\x67\x24\x57\x85\xc0\xcb\x2a\x53\x93\x2b\x52\x6e\xa6\x48\xce\x5f\x01\x3b\x38\xf7\xc5\x86\xaf\x29\x54\x12\x10\x2e\x27\xd2\xff\x38\xd4\xdc\x23\xee\x24\xfb\x5a\x94\x75\x66\x8e\xfb\xf0\x82\xb3\x32\x45\x93\x31\x6b\x30\x11\xf1\x81\xd5\x9f\x0f\x7b\xd8\x7c\x2e\x39\xbc\x23\xc5\x40\xde\xd3\x54\x18\x67\x91\xdf\x85\x1a\xd0\xf6\x0a\x58\x13\xbe\xce\xe6\xf3\x25\x91\xf4\xf9\x3d\x5e\x13\x95\x5d\xcf\xbe\x6d\x97\xdf\xde\xb8\x62\x51\xa3\x85\x71\x32\x17\x1c\xdd\x55\xfb\xb5\xd9\xa7\x10\x46\x0b\xd5\xb5\xfb\x12\xa3\xcf\xaa\x8b\xb2\x8a\x51\x4c\xf4\xcc\xe5\xac\xfb\x8c\x26\x9f\xf5\xf1\x54\x53\x18\x34\xd5\xc9\xf0\x22\x41\x13\xb6\x7b\x5b\x33\x9e\x27\x7b\x33\x63\x97\x77\x90\x6c\xd1\x1a\xeb\x83\xd7\xd5\xf3\x19\xe9\x39\x1a\x45\x49\x5d\x68\x55\x38\xa4\xa8\xf1\x51\x4c\xaf\xf9\x4b\x19\xbb\x75\xff\x6b\x1c\x72\xd9\xc0\x7c\xaf\x9c\x50\xfb\xba\x3b\x9a\x87\x2b\x58\x50\x84\xed\xfd\x80\xd6\xfb\x32\x22\xc0\xa8\xc2\x16\xc9\x2d\xba\x53\xe5\xa6\x71\x99\xae\x15\x34\xe2\x01\x9b\xd2\x54\x3c\xa7\x2e\xdf\xd8\xe8\xd6\x9d\xb8\x36\x5f\x9d\x38\x74\x9e\x82\x59\x7e\x53\xb5\x31\xe9\xc1\x92\x6b\x25\x6d\x5e\x6e\xc9\x28\x1c\x67\x6a\x28\xc3\xa5\x3e\x59\xf6\xa7\x5f\x70\xcd\x8a\xf1\xb1\x35\x31\x94\x4b\xaf\x2c\xe2\x61\x46\x55\x4e\xcd\x4b\xa2\x86\xae\x3f\x6e\xd5\xab\x28\x38\xc1\xc9\x6c\x74\x1b\x06\xc3\xc1\xb7\x93\xf5\x14\x20\xc3\x0d\xd6\x3e\x25\x96\x98\x87\xa3\x3b\x52\x54\xda\x70\xac\x49\xa2\x8d\xa4\x34\x20\xe3\x2a\xc8\xab\xfa\x15\xbe\x92\x98\xa8\x41\x34\x0d\x96\x6b\x23\xc6\xfc\x6a\x49\x8e\xf3\x74\x1b\x46\xd7\x63\xd6\x7a\xfa\x63\x10\x19\xe9\x02\x32\x7c\xdc\x91\x64\x20\x19\x3f\x5d\xfb\xbd\x6d\x80\xe7\x74\xb5\x1a\xea\x68\x7a\x1a\x87\x1f\x51\xcf\x74\x7a\x80\xed\x76\x85\xa7\xda\xb2\x1a\xe9\xcd\xcd\xf2\x58\x56\xba\x6a\x1e\x47\xb7\x8e\x24\x22\x4d\x94\xe1\xc6\xae\xc9\x4a\x9d\x7d\x36\x5a\x8c\x49\x9c\x7d\x36\x26\x54\x72\xa7\xd9\x0d\x7b\x42\x49\x1a\x2a\x9b\x4a\x23\xa2\x6b\x27\xaa\x8f\x5e\x20\xc1\x7a\x1e\xba\x52\xe3\x9a\x99\x8c\x8e\x49\x8d\xd9\x0e\xa6\xa9\xb2\xb6\xdd\xe1\x7d\xdf\x6e\xbf\xcd\x0d\x02\xb3\xf9\xb3\x61\xa0\x32\xe3\xb3\xd5\x9d\xa6\x99\x38\x36\x03\x6b\xa3\xca\x55\x32\xba\x76\xb5\xdb\x51\xa6\x36\xa8\xb6\x6b\x1c\xbb\x38\x88\x3f\x6e\x34\xe2\xa0\xe3\xff\x61\xaf\xe4\xd4\x1e\x71\xc4\x8a\xc4\x78\x11\x61\x5c\x3f\x32\x81\x13\xba\x26\xf0\x1c\x4e\xe8\xe6\x1a\x32\x39\xed\xa7\x32\x32\xa2\x76\x24\xa5\xca\xe4\xd7\xd8\xfd\x08\x07\x1d\xb1\xe5\xf1\x34\x1f\xbe\x3c\xd3\xdd\xd3\xbf\x9d\xb5\xee\xf2\xb9\xe5\x21\xab\xbb\xaf\xdf\x1d\x7f\x9b\x92\x3d\x48\x32\x54\x55\x4b\x63\x7b\x7c\xf7\xc1\x78\xf5\x1f\xba\x2b\xc1\xbb\x0f\x0b\x70\x5b\x15\x28\x07\x24\x6d\x2e\x38\x6e\x08\x6d\x68\x43\xe7\x76\xc6\xaf\xbc\xba\x9d\xa5\x64\x7f\x7e\x23\x41\x0b\x5d\x67\x23\xc2\x18\x04\xbf\xdc\xd4\x33\x7a\x6e\x48\x68\x8f\xa8\x6f\x24\x32\x40\x8a\x18\xb2\x50\x4e\xb6\x4b\xe3\x1e\x55\x18\x9c\x2e\x70\xe6\x9b\x2f\x3d\xc8\xce\x11\xca\xd5\xdf\x25\x3e\xee\x99\x12\x99\x84\xb8\x13\x27\x7a\x67\x74\x0d\x5a\x61\x1b\x1d\xbc\xf2\x8c\x12\xb1\xf2\x3c\x27\xc6\xd1\x9c\x6f\xc7\xa9\x26\x6d\x7f\x33\x0e\x79\xcf\x39\xb5\x02\xbb\xfd\xf3\x21\xe5\x5d\xb4\xac\x55\xbc\x7e\xd7\x00\xb4\x2c\x72\x72\x31\x7a\xf2\x8a\x2f\xde\x6a\xcb\xbc\x52\x72\xec\x58\xe0\xa5\x21\xa3\x43\xad\x0e\x81\xde\x68\x78\xed\x34\x56\x55\x7c\xbe\x11\x63\x9e\x5d\x2f\x58\xa5\x44\x27\x5c\x8e\x93\x01\x39\xb6\x3a\xb3\x4a\x13\x17\x42\xf9\x88\xf3\x14\x30\xba\x00\xb5\x90\xea\x8b\xaa\x21\x02\xa3\x10\xc6\xa9\xa9\xaa\xc2\x2f\x47\xd0\x82\x0b\x09\xec\x51\xb6\xc3\x4b\xc3\x89\x5d\xe8\xcc\x23\x68\x43\xd7\x78\xf5\xf8\xc5\xb9\x9d\x49\x38\x15\xab\x33\x49\x4d\xe7\x55\x9c\xa7\xc7\x9a\x5f\xc7\xd4\x6d\xb5\x5f\x37\x72\x6a\x15\xf3\x06\x38\x6c\xb3\xbc\x5a\x1a\x1b\xc6\x8a\xc5\x6c\xf6\xf0\xf0\x00\x1f\x3c\x48\xcb\xf5\xcc\xb5\x6d\x7b\x56\xed\xd7\x35\xc8\xe2\x90\x91\xfc\x73\x1f\xa0\x13\xc7\xf1\x4c\x5c\x35\x9a\xdb\x43\x96\x86\x03\x1d\x69\x3f\x6f\x50\x81\xee\x1c\x03\x1c\x96\x86\x5d\x1c\x0c\x70\xac\x3f\xf7\x04\x3f\xfc\x8b\xf2\xb3\xc0\x06\x6e\x04\xdd\x79\x50\x7f\x18\x40\xc4\xf0\xa5\x81\xc5\x3d\x85\x56\x2b\x7f\xe6\xf8\x01\x5c\xc0\xbf\x14\x1c\x2e\xaa\x02\x25\x98\xfb\x3d\xae\x70\xb9\xc7\x86\x2c\xb4\x96\x46\xe0\xb8\x9c\x9e\xcc\x53\xcd\x57\x9d\xfa\xb8\xb4\xd6\x03\x00\x27\xc0\x02\xb1\x0d\x48\x97\xc6\x8f\x8e\x0f\x1d\xcf\x33\x25\x4b\x89\x15\x42\x7b\xee\x98\xb6\xe5\xb8\x30\xb2\x03\x2b\x80\x61\xd0\x1c\x8b\x8f\x38\xb1\x05\x8c\x19\xc0\xd0\xf7\xe5\xb9\xd0\x6c\x43\x84\x89\x0d\xfd\x79\x2c\x6a\x91\xd8\xf7\x4c\x1b\xda\x6e\x68\x3a\xd0\x77\x7c\x7e\x1c\x01\x00\xf6\x96\x0b\x39\x9c\x65\x43\x77\x3e\x37\x6d\xe8\xcc\x7d\xcb\x86\x81\x1d\x99\x36\xf4\xed\xb9\x65\xc3\xb9\xe3\x24\x36\x74\x03\xd7\xb2\xa1\x1d\xf3\xf3\x81\xe7\xf0\x63\x81\x31\x74\xf9\xbb\xe3\x47\x99\x0f\x03\x2f\x34\x7d\x18\xf8\xa1\x80\xe7\x90\xed\xf7\x79\x28\x19\xf1\x5c\x5e\x9e\x59\x1c\x3c\xe0\xe0\x41\x98\x58\x36\x74\x62\x81\x27\x8a\x2c\x1b\xfa\x21\x3f\x76\x7d\x4e\x3d\x74\x03\x81\xdf\xe3\x40\xae\xcf\x99\x70\x6c\xce\xa2\x64\xce\xf3\x1f\x8f\xe7\x76\xfc\xef\x10\xfa\x21\x5f\x78\x5b\x62\xe6\x9c\xcb\x88\x5f\x8a\x7d\xce\xb1\xe3\x06\x96\x98\xbd\x3c\x4e\x2c\x5f\x92\xb2\x22\xe8\x38\x9e\xe9\xc1\xb9\x17\xd7\xc7\xfc\xdd\x49\x6c\x93\x43\x38\xfc\x8a\xef\x98\x8f\x57\xea\xf7\x4a\x40\x59\xfc\x6a\x3d\x42\x8e\xe6\x0c\x70\x89\x7a\x73\x31\x8f\x38\xe0\xcc\x71\xe1\xce\xe7\xae\x38\xdc\x78\xd0\x9b\xc7\x09\x87\x08\x84\x50\xe6\x73\x57\x40\x86\xa7\xe3\xf9\xfc\x8d\x3b\x87\xb1\x17\x9a\xae\x0b\x03\x27\x30\x5d\x07\x3a\x51\x5c\x5b\x87\xd9\xb1\x95\xdf\x0d\xb0\x22\x59\xb6\x34\x9e\x7f\x2f\x5e\x17\xb7\x0f\x7f\xb9\x91\xce\x86\x20\xf5\x10\xb7\x3c\x0c\xa8\xae\x5f\x93\xa0\x35\xe9\x5a\xb4\x08\x9f\x98\xee\x05\x02\xb1\xf7\xa2\xad\x6c\x4e\x50\x77\x22\xaa\xd1\x3c\xc9\x48\xf2\x79\x69\x88\x8a\xf8\x3d\x45\xe9\xf4\xc6\x00\x8c\x30\x1e\x7a\x3e\x32\x54\x32\x40\x4b\x71\xc3\x37\xc9\x77\x78\x6c\x6c\xed\xb4\x5b\xff\x2e\xd1\xd5\x73\xa1\x13\x78\xcd\xe7\x98\xf8\xda\x1d\xf1\x55\x22\xac\xe0\xff\x43\x86\x94\xd5\x4e\x07\x5c\xc4\xd9\x9a\x6f\xee\x2e\x56\xb9\xcb\xf0\x02\xef\x71\x4e\xd3\xf4\x65\x92\x91\xa2\x7b\xc6\x10\x41\xd9\xb5\x3d\x18\xc6\x8e\x19\xc7\x70\xee\x46\xef\xfd\x18\x7a\x76\x68\xba\xd0\x8d\x7d\x1e\x3f\x82\x79\x68\xb9\x30\x74\x62\xcb\xb1\xa1\xeb\x45\x96\xcb\xe3\xa8\xe5\xf8\x30\x70\x1d\xf9\x45\x84\x23\x27\x84\x8e\xe7\xf2\x68\x1e\x42\x3b\x98\x9b\x8e\x07\x5d\x37\x3c\x7d\x9b\xc3\x20\x8c\xf6\x4e\x1c\xc1\xd8\x4f\x6c\xd3\x85\x91\xe7\xf1\xe0\x15\x06\xf2\x5a\x6c\xb6\x21\xe3\xc4\x87\x6e\xe4\x99\xb6\x19\xc3\x58\x2c\xd1\xfd\xc0\x31\x5b\x34\x79\x08\xcc\x9c\xc0\x87\x7e\xe4\x59\x71\x08\x3d\xcf\x4b\x1c\x17\xce\x23\x2b\x84\x81\x1f\x98\x8e\x0d\xfd\x28\xb6\x9c\x39\xf4\xfd\xb8\xfb\xed\xa3\xcb\x3f\x43\xc7\x74\xec\x10\xf2\x15\x66\x57\x00\x57\x87\x9a\x31\x71\x41\x55\x36\x0d\xad\x08\x44\x3d\x55\x6f\xb5\xb5\xbc\x91\x9f\x3a\x73\xc6\x0f\x68\x57\x0d\x3b\xe0\xdf\xdd\x03\xe7\x61\xdc\x7c\x8e\xf4\xc0\xd6\x88\xaf\xe8\x81\x43\xc2\x3d\xc1\x3f\xcd\x05\x23\x1b\x06\xbc\xd6\xf8\xc1\x0b\x60\x18\x87\x89\x15\xc3\x28\x0a\xa4\x2f\x45\x71\x64\x46\xd0\x76\xfc\xe6\x8b\xfc\xd8\x3b\xf1\x1c\x46\x91\xcc\xc4\xa6\x84\xe7\x60\x9e\xd9\x01\xab\x3f\x36\xbe\x0f\x43\x7f\x9e\xd4\x78\xeb\xb3\x56\x7b\x40\x8d\xfe\xdf\xf2\xe3\x4d\x1c\x41\xdf\x97\x84\xcd\xd8\x86\xbe\xcb\x6b\x9b\x86\xcf\xdf\xc1\x8f\x92\xbc\x6b\xda\x00\x80\x8d\x55\xa3\x17\x7c\xcf\x1b\xbe\xe3\x36\xdf\xf1\x19\xdf\x1a\xa6\xe3\x2e\xd3\x7c\x86\xe3\xf9\x76\x1d\x1f\x86\x91\x53\x73\xee\xda\x73\x18\x8a\xb2\xec\xc4\xef\x57\xf1\x6f\xbd\x7b\x6b\x1c\x5c\x26\xdc\x66\x5b\xbc\xe5\xe2\xe2\xdc\x99\x8f\xbf\x41\x79\x82\x33\xb0\x2b\xf8\x62\xe6\xff\x75\xb2\x75\x5c\x18\x47\x6e\xf3\x39\xc6\xd5\xbb\x23\xbe\x9e\xab\xbf\xc9\xe8\x57\x75\x75\xc7\x73\x60\x64\xfb\xa6\x63\xcf\xa1\x1f\x3b\x59\x18\xc0\xd8\x9b\x5b\xf2\x23\x99\xc3\x38\xb6\xf8\x9b\x29\x8e\x9c\x08\x7a\x7c\xf5\x61\xb9\x01\xf4\x1c\x57\xe4\xd9\x13\x88\xbc\xea\xca\x63\x09\x60\xda\x99\xc4\x14\x9a\xf2\xe3\xbd\x67\xc3\x20\xf0\xcd\x80\x2f\x2c\x86\xc6\x8a\xeb\x51\x4d\x5a\x1e\x36\x0c\x98\x27\x06\xb2\x36\xfe\xf9\x7b\x81\xd8\x74\x22\x97\x47\x88\x61\x04\xc9\x69\x6e\xf2\x8a\x2b\x8f\x4f\xdc\x4b\xe4\xf5\x1c\x3a\xa4\xc4\x9a\xe7\x11\x7d\xef\xf0\x5e\xf1\xb9\x27\xf1\xbd\x3f\x93\xfd\xdf\x2b\x12\x70\xe3\x93\x2d\xd0\x41\x4b\xe5\xde\xdd\xf1\xa7\xc0\x06\x7e\x60\x80\x56\x6b\x50\xde\x92\x62\x88\xc7\x5f\x4e\x37\xa0\x58\xb4\x24\x6b\x92\x2f\x0d\x37\x28\x0e\xc0\x1d\xe1\x14\x27\x92\x63\x97\x51\x00\xdc\xd6\x0f\xfd\x01\x90\x1c\x38\x25\x03\x24\xc7\xa5\xc1\x97\x78\x06\x28\x97\x86\x6b\x0f\x33\x35\x96\x54\xcb\xf9\x16\xed\x6d\x89\x9b\x97\x15\x2b\xe9\x67\xbc\x38\x3d\xe2\x07\xe4\x09\xab\xb9\x5b\xf6\x74\x22\x45\xd5\x06\x95\x25\x3a\x2e\x80\x63\x9b\x20\x78\x69\x80\xb1\x4b\xcb\xd6\x54\x7b\x67\x1a\x0d\x4f\x54\x51\x16\xfe\x9d\x66\xfa\x57\xad\x9e\x1b\xb8\x61\x1f\xe9\x9c\xeb\xec\x0f\xac\x8d\xda\x4b\xd6\xcd\x22\x58\xc5\xa3\xaa\xb0\xd6\x2c\xae\xc5\x0a\x77\x70\x6d\xfc\xb8\xb1\xab\x73\x9d\xa6\x81\xe9\x06\x01\xff\x5b\x38\xae\xe7\x07\x73\x60\x01\x31\xbc\xd9\x64\x06\xa7\x6e\x34\x30\x50\x55\x29\xcc\x7e\xec\xae\x41\x67\xcf\x4a\x5b\x1c\x74\xe7\x72\xc4\x95\xd1\x87\x63\x28\x34\xfc\x07\x57\xba\x58\xa8\x66\xba\x87\x87\x9c\x3e\x89\x85\x9f\xe8\xd3\x38\x78\xea\xb5\x91\xbd\xfa\x2a\x29\x49\xd1\xd7\x92\x7e\x20\x79\x4a\x1f\xa0\x50\xff\x77\x88\x21\xb0\x04\x7f\xf0\x2a\x62\x01\x8c\x74\x31\x73\xdc\x78\x16\x46\x91\xf1\xe7\xcb\xf3\xde\xff\x09\xe1\x18\x42\xc6\xae\xc2\xdc\xe7\x49\xc2\x8c\x8b\xdb\x39\x67\xdf\x82\x37\x3f\xff\xf4\xf1\xd3\xeb\x9f\x3e\x7d\xbc\xb8\xcb\x74\x8f\x4a\x40\x72\xc2\x08\xca\x3e\x6d\xb0\x60\xcf\x7e\x09\x66\x33\xf0\x69\x83\x9b\x0b\xf2\x16\x46\x42\x73\x80\xf2\x75\x86\x4d\x40\x72\x90\xe2\x75\x89\x71\x05\x2f\xb1\x31\x8e\xe6\x3b\x9c\x09\x5c\xfe\x09\x17\xda\xd2\x5d\xce\x00\xa3\xf5\x0d\x91\xf2\xa1\xf3\xdf\x76\xa8\xc4\x00\xdd\xd3\x1d\x03\x78\x8f\xcb\x23\x70\xe6\x30\x04\x5b\x92\x65\xa4\xc2\x09\xcd\xd3\x6a\x80\x1c\xca\xd7\xbb\x0c\x95\xef\xc9\x96\x30\xb0\x04\xf1\x23\xf7\x5b\x74\x20\xdb\xdd\x16\xe4\xbb\xed\x3d\x2e\x01\x5d\x35\x58\x7a\x99\xe8\x41\xdd\xce\xaa\x60\x09\x52\x9a\xec\xb6\x38\x67\x70\x8d\xd9\x5b\xf9\x80\xfc\xbf\x8e\xef\xd2\x69\x37\xfb\x9e\xef\x8d\x9f\x23\x72\xc7\x62\x72\x8d\xcb\xc7\x82\x38\xb2\x9c\x3e\x00\xb0\xec\x28\xad\x0b\xb4\xda\xe5\x62\x2f\x0a\xa4\xf4\x75\x4e\xb6\xd3\x9b\xbe\xa7\x2e\xc8\x6a\x9a\xd3\x87\x57\x4b\x6f\x6e\xdf\x28\x36\xbb\x39\xa1\x25\xb0\x47\xee\x9f\xb7\x59\x87\x22\x75\xfd\x32\xe9\xa4\xc2\xc9\xaf\x60\x09\x8c\xfa\x6e\x58\x03\xbc\x10\xf8\x5f\x00\x23\xc5\xeb\x9b\xbe\x30\x28\x2e\x2f\x5b\xe6\xd4\x77\xf3\x2c\xa8\x32\x8c\x8b\x29\x4f\x6e\x72\xb6\x67\xb7\x0c\x5c\xb0\xda\xc8\xe4\xfc\xfc\x49\x68\x02\x21\x98\x32\xb2\xc5\x26\x28\x71\x45\xb3\x3d\xee\x95\x20\x7f\x4d\x4f\xc3\xa6\x43\xa0\x82\x59\xcc\x3e\x91\x2d\xa6\x3b\xd6\x1a\x78\x03\xfe\x18\x48\xb8\x35\xea\xa9\xea\x86\x15\x31\x51\x93\x73\xdc\x73\xc3\x84\xb8\x78\x73\x62\xaf\x47\x9b\x3c\xc6\xf5\x19\x5a\x89\x7f\xdb\xe1\x8a\xbd\x16\xcf\xf2\x10\x9a\x7f\x5f\xa2\x2d\x7e\xf7\x1d\x50\x08\x4e\x74\x86\xa5\xfe\x4f\x43\xa6\x7d\xb6\x35\x9b\x29\x51\x2f\xfb\xaf\x4c\xc7\xe9\xb6\xc5\x8a\x6c\x95\x8d\xe0\x24\x11\xcb\xeb\x33\x72\x0a\xf6\x86\xe8\x77\x5c\xa0\x7e\x0c\xbc\x09\xaa\x6d\x77\x1d\x88\xaf\x3c\x3c\xf1\x78\xfe\xb0\xc1\xb9\x08\x50\xa8\xe1\x03\x54\x5c\xc6\x95\x09\x2a\x46\x4b\x9c\xf2\xc0\x88\x40\xb2\xab\x18\xdd\x82\xa2\xa4\x05\x2e\xd9\x11\x76\xb8\x7a\x3c\x6c\x65\x94\x36\xcf\xb7\xcf\x2c\x0b\x48\x96\x2b\x20\x21\x80\x65\x8d\xce\x6e\x22\x02\x67\xb8\x64\x6f\x33\x5d\x5c\x93\x9b\x18\x3d\xc6\xc7\xc7\x8b\xad\x07\xfd\xf8\xc7\xdd\x09\x05\x8e\x8a\xd1\x42\x8f\xe2\xd4\x51\x55\x71\x51\x62\xf4\x79\x80\x8b\x53\xcb\x46\x81\x43\x2e\xe5\xf4\x48\xea\xe5\xde\xcd\xa5\xcf\x81\xb6\x09\xb7\xf6\x5e\x14\x01\x45\x64\xee\x42\x3b\xe5\xd3\xa6\xfc\x0d\x14\x5b\xee\x8a\xf8\x41\x56\xd3\xf3\x2a\x05\xf2\x12\x65\xb9\x34\x72\x9a\x63\x43\xc5\x01\x7f\xd5\xca\x87\x24\xcf\x71\xf9\xc3\xa7\x1f\xdf\x2f\x0d\x79\x93\xc3\x63\xa1\xfb\xec\xd9\x33\x45\x99\xfb\x27\xce\x2a\xcc\xc9\x3f\x23\xc5\xd3\x88\x94\x38\x21\xbc\x6e\x18\xa0\x71\x1d\x6e\xcd\x5a\xb4\xb6\x55\x99\xe0\x60\x7d\x3b\x18\x58\x82\x09\x17\xd4\x44\x3d\xae\x3f\x38\xaa\xe1\x1b\x4b\xba\x20\x64\xb4\xef\x3c\xd3\x30\xaa\xbe\x52\xab\x1a\x1f\x18\x2e\x73\xc4\x27\xbe\xa7\x9f\xf1\x74\x52\x35\x2c\x2e\xfe\x30\xb8\xf6\x8d\x05\x30\x26\x2f\x7a\x0d\xe3\xc5\xc4\x30\x81\x41\x0a\x09\x42\x0a\xf0\x62\x62\xfc\x39\x51\x25\x9f\x91\x05\xc4\x63\x06\x3e\x6d\x74\x28\xd4\x26\x9d\xfd\x2a\x1d\x28\xf5\xd6\x16\xe7\x64\xf4\x53\xd8\x27\x5e\x5b\x1d\xdb\xbf\x90\x59\x19\x8a\xbe\xca\x04\xaf\x9b\x9e\x88\x42\xaf\x93\x04\x17\x0c\xab\xa7\xd8\x9b\x6e\xfb\x41\xd5\x76\x2d\x22\xcd\x75\x22\x1c\x98\x9a\x56\x94\x5f\x2e\x16\xd9\x98\xc7\xe9\xb4\xc4\xa8\xa2\xb9\x4a\x38\x17\xf1\x45\x14\x39\x7c\xc4\x5f\x28\xa1\xbf\x4c\xfb\xba\x2a\xe1\x27\xfc\x00\x3e\xd5\x5d\x8c\x9f\xb9\x04\x2a\x75\xa5\x00\x80\xac\x2a\xcf\x09\xf2\xa4\x25\xfb\x21\x9a\xbc\x25\xbb\x32\x8a\x1c\xfb\xd8\x8c\x19\x44\x21\x5b\x36\x5a\x3c\x47\x5c\x0d\xa3\x39\xe2\x4a\x8f\x25\xa7\xc3\x48\x72\xda\x87\xa3\x4f\x46\x27\xa2\x10\xa5\xe9\xdb\x3d\xce\xd9\x7b\x52\x31\x9c\xe3\x72\x3a\x11\x1b\x45\x13\xf3\x64\x8a\x4a\x9f\x54\x45\x79\x24\x9c\xb9\x56\xa3\xd0\xe2\x62\xf2\x42\x50\xac\x3e\xf2\xaa\x37\x4f\xf0\x2f\xdd\xaf\x30\xc3\xf9\x9a\x6d\x80\x05\x9c\x5f\xe1\xbb\x0f\xaa\x45\x48\x8e\x0f\xac\x77\x85\xf2\x67\xef\xb4\xfb\x27\x9d\xd3\xaf\x31\x67\x59\xe3\xff\x5f\xcf\x59\x63\x30\x27\x3a\x60\x09\x7e\xf9\x55\x51\xd1\xee\xee\xb9\x2f\xdd\x73\x37\x93\x50\xba\x94\xd9\x00\x7f\xa2\xd2\x33\xc5\xfa\x52\x99\x92\x1e\x51\xc3\x62\x57\x6d\x24\xf0\xb5\x41\x70\x97\x9f\xf0\x68\xa9\xcd\x66\x5d\x82\xb4\x98\xb6\xbf\x8b\x5f\x74\xf9\x79\x25\x51\x28\xb2\x46\x1b\xbe\x2a\x32\x92\x60\x35\x0a\x13\x38\x8a\xc7\x13\x86\x02\x7a\xf5\x81\xcb\x42\x1c\xf2\xb9\xf4\xb3\x72\x66\x27\xc5\xe3\x10\x65\x6d\xdd\x6f\x5a\xcb\x25\x70\x74\x35\xaf\xca\x98\x53\x82\x32\xba\x26\xf9\x8a\x2e\x78\x40\x6e\xda\xca\x82\x88\xaa\x04\x3b\x97\xe1\x8a\x96\x6f\x51\xb2\x39\x35\x21\xb4\xfa\x6b\x0b\xeb\x6c\x2e\xbf\xd8\xbf\x6a\x28\xf6\x39\x3e\x50\xfe\x16\xe5\xb5\x2a\x93\xbe\xa7\x7a\x8c\x8f\xb3\x59\x67\x43\x46\xf9\x22\x69\x22\x1e\x00\xeb\xad\xf0\x80\x46\x4d\xcb\xa5\x7d\xf3\x47\x89\xd9\xae\xcc\x15\x3f\xa1\x79\x36\xac\x36\x4f\x5b\x61\x86\x3a\x5a\xe0\x15\x50\xf6\xe2\xc0\xdf\x5d\x83\xbd\xca\xea\x0f\x4b\x82\xdf\x0c\x55\x32\x14\x6b\x55\x28\x32\x78\xa7\x74\x3a\x8d\x83\x0c\x1f\x7a\x7e\xd0\x08\xf4\x6b\xdf\x8b\xa4\xf6\xfb\xc0\xc7\x84\x6f\x55\x5d\xa4\x6a\x8c\xc8\xd5\x7d\x9f\x4c\x54\x65\x42\xfd\xb8\xc2\xe4\xe6\x32\x03\x1a\x22\x03\x1a\x26\x90\x20\xdf\x73\x55\xf7\xd8\x96\xb2\x00\x69\xdd\x08\xaf\xc3\x2e\xc1\xde\xd0\x3c\xc7\x09\xc3\xe9\xbb\x0f\xd5\xa8\xcc\x7d\x39\xec\xb2\xf8\xbf\x1c\xa5\x0a\x6f\xdb\xe3\xbb\x0f\x93\xde\xec\xa9\x68\xb9\xa0\x8a\xdd\xad\x48\x2e\xf6\x2d\xc6\x0c\x3a\x05\x90\x3e\xbe\xaf\x2c\x2c\xd6\x98\xb5\xc7\x4f\x6e\xfa\x49\xea\x03\x59\x89\xd3\x12\x3d\x70\xf2\xa4\xa8\x54\x1c\x64\x98\x01\xd9\xce\xa1\xba\xd2\x79\x72\x6a\xf9\xa8\x52\x41\x83\xa4\xe3\x54\xaa\x8e\x07\xa7\x9a\xe3\x87\xb7\x99\x2a\x92\x15\x3d\x91\xa8\xfe\xed\x60\x5d\x30\x12\x38\xdb\xd3\x48\x4a\x8c\x18\xae\x67\x32\x9d\xc8\xc7\x3f\x74\xd9\x4c\x60\x90\x4d\x2d\xb0\x6c\x7e\xae\x78\x08\x5c\x4c\xf9\x13\x3e\xb0\xc7\x21\x22\x5e\xb3\xe9\x64\x31\xb9\xf9\xc5\xee\xa9\xc4\x2e\xc4\x86\x8a\x02\xe7\xe9\x9b\x0d\xc9\xd2\xa9\xc0\xaa\x6c\xb9\x3f\xf5\x49\xbd\x93\x61\x34\x0f\x6a\x4d\xf7\x28\xd3\x35\x01\xa5\xf5\x7b\x70\xfe\x2d\xd8\xa3\x4c\x99\x73\x56\x24\x7f\xe5\x44\xda\x0c\x33\xb0\x2f\x25\x1f\x69\xbb\x69\x22\xeb\xe9\x17\x89\x1f\xb7\x75\x9c\xc8\x56\x6d\xe7\x8c\x24\x21\x9f\x6e\xd3\xd1\x30\x5e\xac\x48\xfe\x42\xb9\x6d\x34\x44\xa7\x79\xd4\xaf\x21\x91\x64\xa4\x58\x1a\xe2\xf7\x99\xd1\x8e\x51\xb3\xfb\x76\xa3\xbb\x5d\xa3\x15\x7b\x56\x44\xf5\x73\xbc\x40\xd9\x8c\x1b\xea\x4c\x3e\x65\x0a\x76\x71\x30\xe5\x6f\x4b\xcb\x77\xf1\xbb\xe1\x5f\xa0\x8e\x41\x8d\x7f\xa1\x36\x46\x6b\x7d\xc8\xae\x46\xe9\x42\x51\xc2\x29\xa3\xe9\xf9\xa3\x92\x93\x9b\x4e\xd8\xdc\xa3\xec\x85\xf1\x4d\x0f\x53\x03\xfd\x4d\xcc\x7e\x3c\xbe\xfb\x30\x55\xf7\xbc\x95\xe2\x12\x0f\xd9\x76\x99\x20\xc5\x13\xe8\xbf\xa7\xeb\x69\x46\xd7\x57\xd3\xcf\xe8\xfa\x8c\x7c\x46\xd7\x5f\x1a\xe7\x1e\xab\x9a\xab\x13\x30\xe5\xc1\x98\x94\x13\x4d\xa9\xdd\xdb\xc0\x6e\x57\xf7\x83\x4b\xb0\xee\xd0\x81\x4e\x9c\xc2\xc4\x78\x9c\xae\x47\xf7\xa3\x7d\x12\xff\xaf\x96\x8e\x7d\xf3\x47\x8d\x77\x02\x21\x9c\xbc\x10\x57\x79\xdd\xcd\xca\x69\x0b\x12\x58\x20\xbc\xb9\xd6\xfc\x2f\x1f\xa0\xed\xea\x9e\xe3\xbf\x7a\xa9\x2d\x5a\x95\x5a\x65\x2b\x30\x6a\x0b\xf2\xdb\x59\xfd\x10\xfb\xed\x4c\xfc\x5f\x16\xff\x1b\x00\x00\xff\xff\xce\xaf\xbe\x11\xe3\x62\x00\x00")

func dataIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_dataIndexHtml,
		"data/index.html",
	)
}

func dataIndexHtml() (*asset, error) {
	bytes, err := dataIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/index.html", size: 25315, mode: os.FileMode(438), modTime: time.Unix(1528001103, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"data/index.html": dataIndexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"data": &bintree{nil, map[string]*bintree{
		"index.html": &bintree{dataIndexHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

